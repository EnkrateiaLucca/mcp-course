What is the purpose of FastMCP in an MCP server?;FastMCP is a convenience wrapper to define and run MCP servers with minimal boilerplate in Python.
How do you define a tool in FastMCP?;Use the @mcp.tool decorator above a function.
What does the docstring of a tool function provide in FastMCP?;It provides a description for the MCP tool metadata.
What do function type hints define in a FastMCP tool?;They define the parameter types and return type for the tool's interface.
What command starts the MCP server in a script?;mcp.run() inside the __main__ block starts the server.
How do you specify a unique name for your MCP server?;Pass the name as a string when instantiating FastMCP, e.g. FastMCP('hello-server').
What decorator is used to declare an MCP resource?;@mcp.resource
What is an MCP resource used for?;It exposes data for the client to include in the LLM context, controlled by the application.
What decorator is used to declare an MCP prompt?;@mcp.prompt
What is the role of an MCP prompt?;It defines a reusable prompt template that can be invoked by the client.
What type of server protocol does MCP use under the hood?;MCP servers typically use HTTP/JSON-RPC for communication.
Can a function have multiple parameters as an MCP tool?;Yes, and each must be type hinted and JSON-serializable.
What kind of return values should an MCP tool function have?;Simple JSON-serializable types like str, dict, list, etc.
Where are MCP tool definitions served?;At the root endpoint, e.g. POST / via JSON-RPC 2.0.
How do you install the MCP SDK and CLI?;Use pip install 'mcp[cli]'.